<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kosa.Catchvegan.Mapper.ManagerMapper">
<!--    <resultMap id="" type="">-->
<!--        <result column="reserveIdx" property="reserveIdx"/>-->
<!--        <result column="reserveidx" property="reserveidx"/>-->
<!--        <result column="restaurantIdx" property="restaurantIdx"/>-->
<!--        <result column="reserveDate" property="reserveDate"/>-->
<!--        <result column="rescount" property="rescount"/>-->
<!--        <result column="visitstatus" property="visitstatus"/>-->
<!--        <result column="cancelstatus" property="cancelstatus"/>-->
<!--    </resultMap>-->

    <!--  식당정보 불러오기-->
    <select id="restaurantmanage" resultType="RestaurantDto">
        select
            *
            from restaurant r
                left outer join manager m
                on r.restaurantIdx=m.restaurantIdx
                    where managerIdx=#{managerIdx}


    </select>

    <!--  식당정보 수정하기-->
    <update id="updaterestaurant" parameterType="RestaurantDto">
        update
            restaurant
                set
                    name=#{name},
                    menu=#{menu},
                    restaurantinfo=#{restaurantInfo},
                    images=#{images},
                    reservepay=#{reservePay},
                    limitperson=#{limitPerson}
                        where restaurantidx=#{restaurantIdx}

    </update>

    <!--  예약자목록 불러오기-->
    <select id="reservememberlist" parameterType="RestaurantDto">
        select
            m.name,
            m.phone,
            r.reserveDate
            from member m
                 left outer join reserve r
                 on m.memberIdx=r.memberIdx
                    where restaurantidx=#{restaurantIdx}
    </select>


</mapper>